File "launch_in_ns_v10.c" contain one function("netns_change()"), which can change network namespace to which you need, 
and some test, which shows correct work of this function.

Description of function "netns_change()":
  If you need to change current netns to global netns: set the first argument "NULL", the second argument is file
  descriptor of global netns (it must be saved before first call of this function). If you need to change current
  netns to another netns: set the first argument as netns which you need, the second argument may be any.

Algorithm of function "netns_change()":
  If "nsname" == NULL (we need to return to global netns) and file descriptor of global network namespace is correct:
    1.join to global network namespace and exit function succesfull.
  If "nsname" != NULL (we need to change to some netns) do:
    2.Get path for network namespace "nsname".
    3.Create the base netns directory if it doesn't exist.
    4.Create the filesystem state.
    5.Join to network namespace "nsname" and exit function succesfull.

----------------------------------------------------------------------------------------------------------------------

File "open_socket_in_netns.c" contain two functions: "netns_change()"(described below) and "open_socket_in_netns()", 
which open sockets in netwotk namespaces, which you need.

Description of function "open_socket_in_netns()":
  The first argument is array of names network namespaces (nsnames), in which you need to open socket. Second argument
  is count of network namespaces (num_netns) and the next free arguments specified by system call socket(): 
  domain, type, protocol.
  Function returns file descriptors sockets (fd_sockets) which opened in network namespaces (nsnames).
  
Algorithm of function "open_socket_in_netns()":
    1.Allocate memory for array fd_socket.
    2.Get path to the global network namespace of this process.
    3.Save file descriptor of global network namespace.
  In cycle iterate network namespaces (ns_names):
    4.Change netns to "ns_name[i]".
    5.Open socket in netns "ns_name[i]".
  After cycle:  
    6.Return to global netns.
    7.Close file descriptor of global network namespace.
    8.Return file descriptor of socket which openning in netns "nsname".
